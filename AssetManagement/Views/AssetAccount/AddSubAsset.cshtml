@using AssetManagement.Models
@model AssetViewModels

@{
    ViewBag.Title = "About";
}

<style>
    #installationForm .tab-content {
        margin-top: 20px;
    }

    .nav-pills > li > a {
        background: #F5F5F5;
        border: 1px solid #CCC;
        padding: 16px;
        margin: 0 2px 0 5px;
        color: #27ae60;
    }

    .nav-pills > li > a {
        font-size: 17px;
        font-weight: bold;
    }

    .nav-pills > li.active > a, .nav-pills > li.active > a:focus, .nav-pills > li.active > a:hover {
        box-shadow: 5px 5px 8px #888;
        background-color: #27ae60 !important;
    }

    .tabDivContent {
        padding: 9px 0rem;
        margin-left: -8px;
    }

    .buttonLi {
        padding: 10px;
        color: #ffffff;
        background-color: #27ae60;
        font-size: 16px;
        border-radius: 5px;
    }

    .pager li > a, .pager li > span, .pager li > a:hover, .pager li > span:hover {
        display: inline-block;
        padding: 10px;
        background-color: #27ae60;
        border: 1px solid #ddd;
        border-radius: 5px;
        color: #fff;
        font-size: 16px;
    }

    .uploadBtnStyle {
        color: #27ae60;
        cursor: pointer;
    }

    .chosen-container-single .chosen-single {
        height: 33px !important;
        line-height: 30px !important;
    }

        .chosen-container-single .chosen-single div {
            top: 5px !important;
        }
</style>




<form id="installationForm" class="form-horizontal" method="post" accept-charset="UTF-8" action="/AssetAccount/SaveAssetInformtaion">
    <div class="tabDivContent">
        <ul class="nav nav-pills">
            <li class="active"><a href="#locationTab" data-toggle="tab">1. Location Details</a></li>
            <li><a href="#assetInfoTab" data-toggle="tab">2. Instituion Information</a></li>
            <li><a href="#propertyInfoTab" data-toggle="tab">3. Property Information</a></li>
        </ul>

    </div>

    <div class="tab-content">
        <h5 id="setMainInstitutionDetails"></h5>
        <!-- Location tab -->
        <div class="tab-pane active" id="locationTab">

            <div class="form-group">
                @Html.LabelFor(m => m.state, new { @class = "col-xs-3 control-label" })
                <div class="col-xs-5">
                    @Html.DropDownListFor(m => m.selectedState, Model.state, new { @class = "form-control" })
                </div>

            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.division, new { @class = "col-xs-3 control-label" })
                <div class="col-xs-5">
                    @Html.DropDownListFor(m => m.selectedDivision, Model.division, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.MPConstituency, new { @class = "col-xs-3 control-label" })
                <div class="col-xs-5">
                    @Html.DropDownListFor(m => m.selectedMPConstituency, Model.MPConstituency, new { @class = "form-control" })
                </div>
            </div>



            <div id="showMPFlow">
                <div class="form-group">
                    @Html.LabelFor(m => m.district, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.DropDownListFor(m => m.selectedDistrict, Model.district, new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.MLAConstituency, new { @class = "col-xs-3 control-label" })
                <div class="col-xs-5">
                    @Html.DropDownListFor(m => m.selectedMLAConstituency, Model.MLAConstituency, new { @class = "form-control" })
                </div>
            </div>

            <div id="showMLAFlow">
                <div class="form-group">
                    @Html.LabelFor(m => m.taluk, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.DropDownListFor(m => m.selectedTaluk, Model.taluk, new { @class = "form-control" })
                    </div>
                </div>


                <div class="form-group">
                    <label class="col-xs-3 control-label">Select</label>
                    <div class="col-xs-8">
                        <div class="col-xs-4">
                            @Html.RadioButtonFor(m => m.urban, "urban", new { @Name = "rdBtnType", @id = "rdBtnUrban" })
                            @Html.LabelFor(m => m.urban)

                        </div>
                        <div class="col-xs-4">
                            @Html.RadioButtonFor(m => m.rural, "rural", new { @Name = "rdBtnType", @id = "rdBtnRural" })
                            @Html.LabelFor(m => m.rural)

                        </div>
                    </div>
                </div>

                <div id="showUrbanFlow" style="display:none">
                    <div class="form-group">
                        @Html.LabelFor(m => m.selectedMunicipalWardNo, new { @class = "col-xs-3 control-label" })
                        <div class="col-xs-5">
                            @Html.TextBoxFor(m => m.selectedMunicipalWardNo, new { @type = "number", @class = "form-control" })
                        </div>
                    </div>
                </div>

                <div id="showRuralFlow" style="display:none">

                    <div class="form-group">
                        @Html.LabelFor(m => m.talukPanchayat, new { @class = "col-xs-3 control-label" })
                        <div class="col-xs-5">
                            @Html.DropDownListFor(m => m.selectedTalukPanchayat, Model.talukPanchayat, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.gramaPamchayat, new { @class = "col-xs-3 control-label" })
                        <div class="col-xs-5">
                            @Html.DropDownListFor(m => m.selectedGramaPanchayat, Model.gramaPamchayat, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.village, new { @class = "col-xs-3 control-label" })
                        <div class="col-xs-5">
                            @Html.DropDownListFor(m => m.selectedVillage, Model.village, new { @class = "form-control" })
                        </div>
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.latitude, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.latitude, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.longitude, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.longitude, new { @class = "form-control" })
                    </div>
                </div>

            </div>


        </div>


        <!-- Assets tab -->
        <div class="tab-pane" id="assetInfoTab">

            @Html.HiddenFor(m => m.assetTypeFlow)

            <div class="form-group">
                @Html.LabelFor(m => m.assetID, new { @class = "col-xs-3 control-label" })
                <div class="col-xs-5">
                    @Html.TextBoxFor(m => m.assetID, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.mainInstitutionName, new { @class = "col-xs-3 control-label" })
                <div class="col-xs-5">
                    @Html.DropDownListFor(m => m.selectedMainInstitutionName, Model.mainInstitutionName, new { @class = "chosen-select" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(m => m.institutionName, new { @class = "col-xs-3 control-label" })
                <div class="col-xs-5">
                    @Html.TextBoxFor(m => m.institutionName, new { @class = "form-control" })
                </div>
            </div>


            @*<div class="form-group">
                    @Html.LabelFor(m => m.assetName, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.assetName, new { @class = "form-control" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(m => m.address, new { @class = "col-xs-3 control-label" })
                <div class="col-xs-5">
                    @Html.TextBoxFor(m => m.address, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.assetType, new { @class = "col-xs-3 control-label" })
                <div class="col-xs-5">
                    @Html.DropDownListFor(m => m.selectedAssetTypeList, Model.assetType, new { Multiple = "multiple", @class = "chosen-select" })
                </div>
                <div id="showAssetTypeOthers" style="display:none" class="col-xs-3">
                    @Html.TextBoxFor(m => m.assetTypeOthers, new { @placeholder = "Enter other Asset type", @class = "form-control" })
                </div>

            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.assetStatus, new { @class = "col-xs-3 control-label" })
                <div class="col-xs-5">
                    @Html.DropDownListFor(m => m.selectedAssetStatusList, Model.assetStatus, new { Multiple = "multiple", @class = "chosen-select" })
                </div>
                <div id="showAssetStatusOthers" style="display:none" class="col-xs-3">
                    @Html.TextBoxFor(m => m.assetStatusOthers, new { @placeholder = "Enter other Asset status", @class = "form-control" })
                </div>

                <div class="col-xs-3">
                    <i class="fa fa-upload fa-2x uploadBtnStyle" id="assetStatusUpload"></i>
                    <i id="assetStatusFileCount"></i>
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(m => m.gnNumber, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.gnNumber, new { @class = "form-control" })
                    </div>
                    <div class="col-xs-2">
                        <i class="fa fa-upload fa-2x uploadBtnStyle" id="gnNumberUpload"></i>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.gnDate, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">

                        <div class="input-group input-append date" id="pickGnDate">
                            @Html.TextBoxFor(m => m.gnDate, new { @class = "form-control" })
                            <span class="input-group-addon add-on"><span class="glyphicon glyphicon-calendar"></span></span>
                        </div>

                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(m => m.crNumber, new { @class = "col-xs-3 control-label" })
                <div class="col-xs-5">
                    @Html.TextBoxFor(m => m.crNumber, new { @class = "form-control" })
                </div>
                <div class="col-xs-3">
                    <i class="fa fa-upload fa-2x uploadBtnStyle" id="crNumberUpload"></i>
                    <i id="crNumberFileCount"></i>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.crDate, new { @class = "col-xs-3 control-label" })
                <div class="col-xs-5">

                    <div class="input-group input-append date" id="pickCrDate">
                        @Html.TextBoxFor(m => m.crDate, new { @class = "form-control" })
                        <span class="input-group-addon add-on"><span class="glyphicon glyphicon-calendar"></span></span>
                    </div>
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(m => m.courtJudgementOrder, new { @class = "col-xs-3 control-label" })
                <div class="col-xs-5">
                    @Html.TextBoxFor(m => m.courtJudgementOrder, new { @class = "form-control" })
                </div>
                <div class="col-xs-3">
                    <i class="fa fa-upload fa-2x uploadBtnStyle" id="courtOrderUpload"></i>
                    <i id="courtJudgementOrderFileCount"></i>
                </div>

            </div>

            @*<div class="form-group">
                    @Html.LabelFor(m => m.waqfID, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.waqfID, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.wamsiCode, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.wamsiCode, new { @class = "form-control" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(m => m.institutionType, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.DropDownListFor(m => m.selectedInstitutionType, Model.institutionType, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.classificationType, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.DropDownListFor(m => m.selectedClassificationType, Model.classificationType, new { @class = "form-control" })
                    </div>
                </div>*@


        </div>

        <!--Property info tab-->

        <div class="tab-pane" id="propertyInfoTab">
            <fieldset>
                <legend>Property Details</legend>

                <div class="form-group">
                    @Html.LabelFor(m => m.surveyNo, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.surveyNo, new { @class = "form-control" })
                    </div>
                    <div class="col-xs-3">
                        <i class="fa fa-upload fa-2x uploadBtnStyle" id="surveyNoUpload"></i>
                        <i id="surveyNoFileCount"></i>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.khathaNo, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.khathaNo, new { @class = "form-control" })
                    </div>
                    <div class="col-xs-3">
                        <i class="fa fa-upload fa-2x uploadBtnStyle" id="khathaNoUpload"></i>
                        <i id="khathaNoFileCount"></i>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.municipalNo, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.municipalNo, new { @class = "form-control" })
                    </div>
                    <div class="col-xs-3">
                        <i class="fa fa-upload fa-2x uploadBtnStyle" id="municipalNoUpload"></i>
                        <i id="municipalNoFileCount"></i>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.propertyID, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.propertyID, new { @class = "form-control" })
                    </div>
                </div>

            </fieldset>

            <fieldset>
                <legend>Boundaries</legend>

                <div class="form-group">
                    @Html.LabelFor(m => m.north, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.north, new { @class = "form-control" })
                    </div>
                    <div class="col-xs-3">
                        <i class="fa fa-upload fa-2x uploadBtnStyle" id="northUpload"></i>
                        <i id="northFileCount"></i>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.east, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.east, new { @class = "form-control" })
                    </div>
                    <div class="col-xs-3">
                        <i class="fa fa-upload fa-2x uploadBtnStyle" id="eastUpload"></i>
                        <i id="eastFileCount"></i>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.south, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.south, new { @class = "form-control" })
                    </div>
                    <div class="col-xs-3">
                        <i class="fa fa-upload fa-2x uploadBtnStyle" id="southUpload"></i>
                        <i id="southFileCount"></i>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.west, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.west, new { @class = "form-control" })
                    </div>
                    <div class="col-xs-3">
                        <i class="fa fa-upload fa-2x uploadBtnStyle" id="westUpload"></i>
                        <i id="westFileCount"></i>
                    </div>
                </div>

            </fieldset>


            <fieldset>
                <legend>Extent of Land in Acre / S.Ft / Sq. Yard</legend>

                <div class="form-group">
                    @Html.LabelFor(m => m.extentLandUnit, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.DropDownListFor(m => m.selectedExtentLandUnit, Model.extentLandUnit, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.northToSouth, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.northToSouth, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.eastToWest, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.eastToWest, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.total, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.total, new { @class = "form-control" })
                    </div>
                </div>
            </fieldset>
            <hr />
            <div class="form-group">
                @Html.LabelFor(m => m.estimatedValue, new { @class = "col-xs-3 control-label" })
                <div class="col-xs-5">
                    @Html.TextBoxFor(m => m.estimatedValue, new { @class = "form-control" })
                </div>
                <div class="col-xs-3">
                    <i class="fa fa-upload fa-2x uploadBtnStyle" id="estimatedValueUpload"></i>
                    <i id="estimatedValueFileCount"></i>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.estimatedDate, new { @class = "col-xs-3 control-label" })
                <div class="col-xs-5">

                    <div class="input-group input-append date" id="pickCrDate">
                        @Html.TextBoxFor(m => m.estimatedDate, new { @class = "form-control" })
                        <span class="input-group-addon add-on"><span class="glyphicon glyphicon-calendar"></span></span>
                    </div>
                </div>
            </div>



            <fieldset>
                <legend>Litigations</legend>

                <div class="form-group">
                    @Html.LabelFor(m => m.litigationManagement, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.litigationManagement, new { @class = "form-control" })
                    </div>
                    <div class="col-xs-3">
                        <i class="fa fa-upload fa-2x uploadBtnStyle" id="litigationManagementUpload"></i>
                        <i id="litigationManagementFileCount"></i>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.litigationAsset, new { @class = "col-xs-3 control-label" })
                    <div class="col-xs-5">
                        @Html.TextBoxFor(m => m.litigationAsset, new { @class = "form-control" })
                    </div>
                    <div class="col-xs-3">
                        <i class="fa fa-upload fa-2x uploadBtnStyle" id="litigationAssetUpload"></i>
                        <i id="litigationAssetFileCount"></i>
                    </div>
                </div>
            </fieldset>

            <fieldset>
                <legend></legend>
                <div class="form-group">
                    <div class="col-xs-3"></div>
                    <div class="col-xs-5 control-label">
                        <label class="control-label">Geo Stamped Images </label>
                    </div>
                    <div class="col-xs-3">
                        <i class="fa fa-upload fa-2x uploadBtnStyle" id="geoStampedUpload"></i>
                        <i id="geoStampedFileCount"></i>
                    </div>
                </div>
            </fieldset>

        </div>




        <!-- Previous/Next buttons -->
        <ul class="pager wizard">
            <li class="previous"><a href="javascript: void(0);">Previous</a></li>
            <li class="next"><a href="javascript: void(0);">Next</a></li>
        </ul>
    </div>
</form>

<script>
    $(function () {

        assetFlowStatus = "@ViewBag.assetFlow";

        if("@ViewBag.assetFlow" == "AddAsset"){
            $('#selectedDivision').trigger('change');
        }


        $('#selectedAssetTypeList').chosen();
        $('#selectedAssetTypeList_chosen').css('width', '100%');

        $('#selectedAssetStatusList').chosen();
        $('#selectedAssetStatusList_chosen').css('width', '100%');




        if ("@ViewBag.login" != 'login') {
            $('#loginLink').html("Log out")
            $("#loginLink").attr("href", "/LoginReg/Logout")
        }

        $.ajax({
            type: 'Post',
            url: '/AssetAccount/GetMainInstitutionList',
            success: function (data) {

                if (data.result != null) {
                    var dd1 = document.getElementById("selectedMainInstitutionName");
                    dd1.innerHTML = '';

                    var length = Object.keys(data.result).length;
                    dd1.options.add(new Option('--Select--', '--Select--'));
                    $.each(data.result, function (key, value) {
                        dd1.options.add(new Option(key, value));
                    });

                    if("@ViewBag.assetFlow" == "EditAsset"){

                        @{

                            <text>
                        $('#selectedMainInstitutionName option[value="@Model.selectedMainInstitutionName"]').attr("selected", "selected")
                        </text>

                        }

                        $('#setMainInstitutionDetails').html('Instituion ID : ' + $('#assetID').val() + ' | Main Instituion name : ' + $("#selectedMainInstitutionName option:selected").html() + ' | Sub Institution name : '+$("#institutionName").val());
                        $('#assetID').attr("readonly", "readonly");

                    }
                    $('#selectedMainInstitutionName').chosen();
                    $('#selectedMainInstitutionName_chosen').css('width', '100%');

                }
            }
        });


        $('#assetID').change(function () {

            var instID = $('#assetID').val();
            $.ajax({
                type: 'Post',
                url: '/AssetAccount/checkForInstiutionId',
                data: { 'institutionId': instID },
                success: function (data) {

                    if (data.result == "true") {
                        $('#assetIdStatus').html('Id not present. Change the number');
                    }
                    else {
                        $('#assetIdStatus').html('');
                        $('#setMainInstitutionDetails').html('Instituion ID : ' + $('#assetID').val());
                    }


                }
            });

        })

        $('#selectedMainInstitutionName').change(function () {
            var text = $("#selectedMainInstitutionName option:selected").html();

            if($("#institutionName").val().length == 0){
                $('#setMainInstitutionDetails').html('Instituion ID : ' + $('#assetID').val() +' | Main Instituion name : '+text);
            }
            else{
                $('#setMainInstitutionDetails').html('Instituion ID : ' + $('#assetID').val() + ' | Main Instituion name : ' + $("#selectedMainInstitutionName option:selected").html() + ' | Sub Institution name : '+$("#institutionName").val());
            }

        })

        $('#institutionName').change(function () {

            $('#setMainInstitutionDetails').html('Instituion ID :' + $('#assetID').val() + ' | Main Instituion name :' + $("#selectedMainInstitutionName option:selected").html() + ' | Sub Institution name : '+$("#institutionName").val());

        })

        if ("@ViewBag.assetFlow" != "AddAsset") {

            if ("@Model.rural" == 'rural') {
                $("#rdBtnRural").prop("checked", true)
                $('#rdBtnRural').trigger('click');
            } else {
                $("#rdBtnUrban").prop("checked", true)
                $('#rdBtnUrban').trigger('click');
            }
        }



        if("@ViewBag.assetFlow" == "EditAsset"){



            @{
                foreach(var i in Model.selectedAssetTypeList) {
                    <text>
                        $('#selectedAssetTypeList option[value="@i"]').attr("selected", "selected")
                    </text>
                }

                foreach(var i in Model.selectedAssetStatusList) {
                    <text>
                        $('#selectedAssetStatusList option[value="@i"]').attr("selected", "selected")
                    </text>
                }

                if(Model.assetTypeOthers != "" && Model.assetTypeOthers != null)
                {
                    <text>
                        $("#showAssetTypeOthers").show();
                    </text>
                }

                if(Model.assetStatusOthers != "" && Model.assetStatusOthers != null)
                {
                    <text>
                        $("#showAssetStatusOthers").show();
                    </text>
                }

            }

            $(".chosen-select").trigger("chosen:updated");


            createImageThumbnail(@Html.Raw(Json.Encode(ViewBag.assetStatusImageLst)),assetStatusImageArray);
            $('#assetStatusFileCount').html(assetStatusImageArray.length + ' Files uploaded');
            createImageThumbnail(@Html.Raw(Json.Encode(ViewBag.crNumberImageLst)),crNumberImageArray);
            $('#crNumberFileCount').html(crNumberImageArray.length + ' Files uploaded');
            createImageThumbnail(@Html.Raw(Json.Encode(ViewBag.courtOrderImageLst)),courtOrderImageArray);
            $('#courtJudgementOrderFileCount').html(courtOrderImageArray.length + ' Files uploaded');
            createImageThumbnail(@Html.Raw(Json.Encode(ViewBag.surveyNoImageLst)),surveyNoImageArray);
            $('#surveyNoFileCount').html(surveyNoImageArray.length + ' Files uploaded');
            createImageThumbnail(@Html.Raw(Json.Encode(ViewBag.khathaNoImageLst)),khathaNoImageArray);
            $('#khathaNoFileCount').html(khathaNoImageArray.length + ' Files uploaded');
            createImageThumbnail(@Html.Raw(Json.Encode(ViewBag.municipalNoImageLst)),municipalNoImageArray);
            $('#municipalNoFileCount').html(municipalNoImageArray.length + ' Files uploaded');
            createImageThumbnail(@Html.Raw(Json.Encode(ViewBag.northImageLst)),northImageArray);
            $('#northFileCount').html(northImageArray.length + ' Files uploaded');
            createImageThumbnail(@Html.Raw(Json.Encode(ViewBag.eastImageLst)),eastImageArray);
            $('#eastFileCount').html(eastImageArray.length + ' Files uploaded');
            createImageThumbnail(@Html.Raw(Json.Encode(ViewBag.southImageLst)),southImageArray);
            $('#southFileCount').html(southImageArray.length + ' Files uploaded');
            createImageThumbnail(@Html.Raw(Json.Encode(ViewBag.westImageLst)),westImageArray);
            $('#westFileCount').html(westImageArray.length + ' Files uploaded');
            createImageThumbnail(@Html.Raw(Json.Encode(ViewBag.estimatedValueImageLst)),estimatedValueImageArray);
            $('#estimatedValueFileCount').html(estimatedValueImageArray.length + ' Files uploaded');
            createImageThumbnail(@Html.Raw(Json.Encode(ViewBag.litigationManagementImageLst)),litigationManagementUploadImageArray);
            $('#litigationManagementFileCount').html(litigationManagementUploadImageArray.length + ' Files uploaded');
            createImageThumbnail(@Html.Raw(Json.Encode(ViewBag.litigationAssetImageLst)),litigationAssetUploadImageArray);
            $('#litigationAssetFileCount').html(litigationAssetUploadImageArray.length + ' Files uploaded');
            createImageThumbnail(@Html.Raw(Json.Encode(ViewBag.geoStampedImageLst)),geoStampedUploadImageArray);
            $('#geoStampedFileCount').html(geoStampedUploadImageArray.length + ' Files uploaded');
        }

        function createImageThumbnail(list,arrayElm){

            list.forEach(function(d){
                var arr = d.split('|');
                var tempObj ={};
                tempObj.name = arr[0];
                tempObj.size = arr[1];
                arrayElm.push(tempObj);
            })

        }




    })
</script>